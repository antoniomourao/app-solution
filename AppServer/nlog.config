<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="nlogs/app-server-internal.log">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <variable name="AppName" value="app-server"/>
  <variable name="LogDir" value="nlogs"/>

  <!-- the targets to write to -->
    <!-- File Target for all log messages with basic details -->
  <targets async="true">
    <!-- (Json) Structured -->
    <target xsi:type="File"
            name="default"
            fileName="${LogDir}/${AppName}.log"
            archiveNumbering="DateAndSequence" 
            archiveAboveSize="3355443200"
            archiveDateFormat="yyyy-MM-dd"
            archiveEvery="Day"
            maxArchiveFiles="30"
            archiveFileName="${LogDir}/archive/${AppName}_{#}.log" >

      <layout xsi:type="JsonLayout" includeAllProperties="true" MaxRecursionLimit="2">
        <attribute name="Time" layout="${longdate}" />
        <attribute name="Level" layout="${level:upperCase=true}"/>
        <attribute name="Message" layout="${message:raw=true}" />
        <!-- Exception will be logged as serialized -->
        <attribute name="Exception" layout="${exception:format=toString}" />
      </layout>
    </target>
    <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile-web" fileName="${LogDir}/${AppName}-AspNetCore-own-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
  </targets>

  <!-- rules to map from logger name to target 
  
        The Microsoft Logging filters specified in appsettings.json are ignored by default when using NLog 5.0

  -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="default" />

    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="default, lifetimeConsole, ownFile-web" final="true" />

    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />
    
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
  </rules>
</nlog>