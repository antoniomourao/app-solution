@using AppShared.NavMenu;

@foreach (var (module, menuItems) in NavMenuItems)
{
    <div class="nav-item px-3">
        @if (menuItems != null && menuItems.Count > 0)
        {
            <div class="nav-item px-3">
                @foreach (var item in menuItems)
                {
                    <NavLink class="nav-link" href="@item.Href" data-enhance-nav="false">
                        <span class="@item.Icon" aria-hidden="true"></span> @item.Title
                    </NavLink>
                }
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public bool AuthorizedOnly { get; set; }

    [Inject]
    private IDomainModuleServices? _domainModuleServices { get; set; }

    private List<(string, List<INavMenuItem>)> NavMenuItems { get; set; } = new List<(string,
    List<INavMenuItem>)>();

    protected override void OnInitialized()
    {
        if (_domainModuleServices != null && _domainModuleServices.DomainModules?.Count() > 0)
        {
            foreach (var module in _domainModuleServices.DomainModules)
            {
                if (module.NavMenuItems == null || module.NavMenuItems.Count == 0) continue;
                List<INavMenuItem> ModuleNavMenuItems = new List<INavMenuItem>();
                foreach (var item in module.NavMenuItems!)
                {
                    if (AuthorizedOnly && item.RequiresAuthorization)
                    {
                        ModuleNavMenuItems.Add(item);
                    }
                    else
                    {
                        ModuleNavMenuItems.Add(item);
                    }
                }
                NavMenuItems.Add((module.MenuTitle, ModuleNavMenuItems));
            }
        }
    }


}